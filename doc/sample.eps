%!PS-Adobe-3.0 EPSF
%%Title: foo
%%For: Akim Demaille
%%Creator: a2ps 4.11.0a
%%CreationDate: 98-12-30 22:45:04
%%BoundingBox: 24 24 100 258
%%DocumentData: Clean7Bit
%%Orientation: Landscape
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-BoldOblique
%%+ font Courier-Oblique
%%+ font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-BoldOblique
%%+ font Palatino-Roman
%%+ font Symbol
%%+ font Times-Bold
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: encoding ISO-8859-1Encoding
%%+ procset a2ps-a2ps-hdr
%%+ procset a2ps-base-Prolog
%%+ procset a2ps-black+white-text
%%+ procset a2ps-simple-hdr
%%EndComments
/a2psdict 200 dict def
a2psdict begin
%%BeginProlog
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97, 98 Akim Demaille, Miguel Santana
%%BeginResource: procset a2ps-base-Prolog 2.0 1
% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse

% EPSF import as in the Red Book
/BeginInclude {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack 
  userdict begin
    0 setgray 0 setlinecap
    1 setlinewidth 0 setlinejoin
    10 setmiterlimit [ ] 0 setdash newpath
    gs_languagelevel 1 ne {
      false setstrokeadjust false setoverprint 
    } if
} bind def

/EndInclude {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

/BeginEPSF {
  BeginInclude
  /showpage { } def
} bind def

/EndEPSF {
  EndInclude
} bind def

% Make sure to have the rect* procset (not available in PS level 1)
% Because the Red bible says *not* to name the compatibility versions
% with the same name as the original operators, the `rect*' series is
% here spelled `box*'
/rectfill where { %ifelse
  pop
  /boxfill   /rectfill load def
  /boxstroke /rectstroke load def
  /boxclip   /rectclip load def
}{ %ifelse
  /*buildrect {
    dup type /integertype eq 1 index type /realtype eq or { %ifelse
      4 -2 roll moveto dup 0 exch rlineto
      exch 0 rlineto neg 0 exch rlineto
      closepath
    }{ %else
      dup type /arraytype eq {
	aload length 4 div cvi { %repeat
	  *buildrect
	} repeat
      } if
    } ifelse 
  } bind def 
  /boxfill { %def
    gsave *buildrect fill grestore
  } bind def
  /boxstroke { %def
    gsave *buildrect stroke grestore
  } bind def 
  /boxclip { %def 
    newpath *buildrect clip newpath
  } bind def 
} ifelse

% Make sure to have selectfont (not in PS level 1)
/selectfont where { pop }{ %ifelse
  /selectfont { %def
    exch findfont exch scalefont setfont
  } bind def
} ifelse

% Page prefeed
/page_prefeed {         % bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} bind def

/deffont {
  findfont exch scalefont def
} bind def

/reencode_font {
  findfont reencode 2 copy definefont pop def
} bind def

% Function c-show (str => -)
% centers text only according to x axis.
/c-show { 
  dup stringwidth pop
  2 div neg 0 rmoveto
  show
} bind def

% Function l-show (str => -)
% prints texts so that it ends at currentpoint
/l-show {
  dup stringwidth pop neg 
  0 
  rmoveto show
} bind def

% center-fit show (str w => -)
% show centered, and scale currentfont so that the width is less than w
/cfshow {
  exch dup stringwidth pop
  dup 0 eq { % if
    % If there is nothing to show, don't
    pop pop
  }{ % else
    % If the title is too big, try to make it smaller
    3 2 roll 2 copy
    gt
    { % if, i.e. too big
      exch div
      currentfont exch scalefont setfont
    } { % ifelse
      pop pop 
    } ifelse
    c-show			% center title
  } ifelse
} bind def

% Return the y size of the current font
% - => fontsize
/currentfontsize {
  currentfont /FontMatrix get 3 get 1000 mul
} bind def

% reencode the font
% <encoding-vector> <fontdict> -> <newfontdict>
/reencode { %def
  dup length 5 add dict begin
    { %forall
      1 index /FID ne 
      { def }{ pop pop } ifelse
    } forall
    /Encoding exch def

    % Use the font's bounding box to determine the ascent, descent,
    % and overall height; don't forget that these values have to be
    % transformed using the font's matrix.
    % We use `load' because sometimes BBox is executable, sometimes not.
    % Since we need 4 numbers an not an array avoid BBox from being executed
    /FontBBox load aload pop
    FontMatrix transform /Ascent exch def pop
    FontMatrix transform /Descent exch def pop
    /FontHeight Ascent Descent sub def

    % Define these in case they're not in the FontInfo (also, here
    % they're easier to get to.
    /UnderlinePosition 1 def
    /UnderlineThickness 1 def
    
    % Get the underline position and thickness if they're defined.
    currentdict /FontInfo known {
      FontInfo
      
      dup /UnderlinePosition known {
	dup /UnderlinePosition get
	0 exch FontMatrix transform exch pop
	/UnderlinePosition exch def
      } if
      
      dup /UnderlineThickness known {
	/UnderlineThickness get
	0 exch FontMatrix transform exch pop
	/UnderlineThickness exch def
      } if
      
    } if
    currentdict 
  end 
} bind def

% Function print line number (<string> # -)
/# {
  gsave
    sx cw mul neg 2 div 0 rmoveto
    f# setfont
    c-show
  grestore
} bind def

% -------- Some routines to enlight plain b/w printings ---------

% Underline
% width --
/dounderline {
  currentpoint
  gsave
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    0 rlineto
    stroke
  grestore
} bind def

% Underline a string
% string --
/dounderlinestring {
  stringwidth pop
  dounderline
} bind def

/UL {
  /ul exch store
} bind def

% Draw a box of WIDTH wrt current font
% width --
/dobox {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    stroke
  grestore
} bind def

/BX {
  /bx exch store
} bind def

% Box a string
% string --
/doboxstring {
  stringwidth pop
  dobox
} bind def

%
% ------------- Color routines ---------------
%
/FG /setrgbcolor load def

% Draw the background
% width --
/dobackground {
  currentpoint
  gsave
    newpath
    moveto
    0 currentfont /Descent get currentfontsize mul rmoveto
    dup 0 rlineto
    0 currentfont /FontHeight get currentfontsize mul rlineto
    neg 0 rlineto
    closepath
    bgcolor aload pop setrgbcolor
    fill
  grestore
} bind def

% Draw bg for a string
% string --
/dobackgroundstring {
  stringwidth pop
  dobackground
} bind def


/BG {
  dup /bg exch store
  { mark 4 1 roll ] /bgcolor exch store } if
} bind def


/Show {
  bg { dup dobackgroundstring } if
  ul { dup dounderlinestring } if
  bx { dup doboxstring } if
  show
} bind def

% Function T(ab), jumps to the n-th tabulation in the current line
/T {
  cw mul x0 add
  bg { dup currentpoint pop sub dobackground } if
  ul { dup currentpoint pop sub dounderline } if
  bx { dup currentpoint pop sub dobox } if
  y0 moveto
} bind def

% Function n: move to the next line
/n {
  /y0 y0 lh sub store
  x0 y0 moveto
} bind def

% Function N: show and move to the next line
/N {
  Show
  /y0 y0 lh sub store
  x0 y0 moveto
} bind def

/S {
  Show
} bind def
%%EndResource
%%BeginResource: procset a2ps-simple-hdr 2.0 2
10 dict dup begin
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97 Akim Demaille, Miguel Santana
% Function water: prints a water mark in background
/water { %def
  gsave
    width 2 div height 2 div moveto 
    height width atan rotate
  fTimes-Bold 100 scalefont setfont
    .97 setgray
    dup stringwidth pop 2 div neg -50 rmoveto
    show
  grestore
} bind def

% Function rhead: prints the header
/rhead {  %def
  fHelvetica
  top .6 mul scalefont setfont
  0 height top .8 mul sub moveto
  show

  width 2 div height top .8 mul sub moveto
  c-show
  
  width height top .8 mul sub moveto
  l-show
} bind def

% Function footer (lf cf rf -> -)
/footer {
  fHelvetica
  bottom .6 mul scalefont setfont
  0 bottom .2 mul moveto
  show

  width 2 div bottom 0.2 mul moveto
  c-show
  
  width bottom 0.2 mul moveto
  l-show
} bind def

/before {
  water
} bind def

% <r-header> <c-footer> <r-footer> <l-footer> after -
/after {
  footer
  rhead
%  gsave
%    1 1 0 setrgbcolor
%    left bottom width right left add sub height top bottom add sub boxstroke
%  grestore
} bind def
end % of plain dict
%%EndResource
/page_dict exch def
10 dict dup begin
%%BeginResource: procset a2ps-a2ps-hdr 2.0 2
%%Copyright: (c) 1988, 89, 90, 91, 92, 93 Miguel Santana
%%Copyright: (c) 1995, 96, 97 Akim Demaille, Miguel Santana
% Function title: prints page header.
% <ct> <rt> <lt> are passed as argument
/title { 
  % 1. Draw the good old gray box
  [ 0 height top sub width top ] dup
  gsave
    0.95 setgray boxfill
    % We use the left margin as the width of the box
    left setlinewidth
    0 setgray boxstroke
  grestore

  % Move inside the box
  0 height top 0.7 mul sub moveto
  % stk: ct rt lt
  fHelvetica
  top 0.6 mul scalefont setfont

  % 3. The left title
  gsave
    % (XX) is used to leave some room between the items
    dup
    stringwidth pop (XX) stringwidth pop add exch % leave space took on stack
    % Move a bit so that we are not colliding with the border
    (X) stringwidth pop 0 rmoveto
    show			% left title
  grestore
  exch
  % stk: ct ltw rt
  % 4. the right title
  gsave
    % (XX) is used to leave some room
    dup 
    width 0 rmoveto
    stringwidth pop (XX) stringwidth pop add exch % leave space took on stack
    % Move a bit so that we are not colliding with the border
    (X) stringwidth pop neg 0 rmoveto
    l-show			% right title
  grestore
  % stk: ct ltw rtw
  % 5. the center title
  gsave
    width 3 1 roll
    % stk: ct width ltw rtw
    3 copy 
    % Move to the center of the left room
    sub add 2 div 0 rmoveto
    % What is the available space in here?
    add sub top 0.8 mul sub top 0.8 mul sub
    % stk: ct space_left
  fTimes-Bold
    top 0.8 mul scalefont setfont
    cfshow
  grestore
} bind def

% Function border: prints virtual page border
/border { %def
  gsave
    % We use the left margin as the width of the box
    left setlinewidth
    0 0 width height boxstroke
  grestore
} bind def

% <c-title> <r-title> <l-title> before -
/after {
  title
  border
} bind def
end
%%EndResource
/virtual_dict exch def
%%BeginResource: procset a2ps-black+white-text 3.0 1
/p {
  false UL
  false BX
  fCourier bfs scalefont setfont
  Show
} bind def

/sy {
  false UL
  false BX
  fSymbol bfs scalefont setfont
  Show
} bind def

/k {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/K {
  false UL
  false BX
  fCourier-Bold bfs scalefont setfont
  Show
} bind def

/c {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/C {
  false UL
  false BX
  fCourier-BoldOblique bfs scalefont setfont
  Show 
} bind def

/l {
  false UL
  false BX
  fCourier-Oblique bfs scalefont setfont
  Show
} bind def

/L {
  false UL
  false BX
  fHelvetica-Bold bfs scalefont setfont
  Show 
} bind def

/str {
  false UL
  false BX
  fPalatino-Roman,Times-Roman bfs scalefont setfont
  Show
} bind def

/e {
  false UL
  true BX
  fHelvetica-BoldOblique bfs scalefont setfont
  Show
} bind def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier-BoldOblique
%%IncludeResource: font Courier-Oblique
%%IncludeResource: font Helvetica
%%IncludeResource: font Helvetica-Bold
%%IncludeResource: font Helvetica-BoldOblique
%%IncludeResource: font Palatino-Roman
%%IncludeResource: font Symbol
%%IncludeResource: font Times-Bold
%%BeginResource: encoding ISO-8859-1Encoding
/ISO-8859-1Encoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright 
/parenleft /parenright /asterisk /plus /comma /minus /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /colon /semicolon /less /equal /greater /question 
/at /A /B /C /D /E /F /G 
/H /I /J /K /L /M /N /O 
/P /Q /R /S /T /U /V /W 
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore 
/quoteleft /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef 
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section 
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron 
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /bullet 
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown 
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla 
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis 
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply 
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls 
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla 
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis 
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide 
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis 
] def
%%EndResource
% Initialization of a2ps variables
page_dict begin
  /width  234.168 def
  /height 76.6921 def
  /left   -0 def
  /right  -0 def
  /top    15 def
  /bottom 15 def
end % of page_dict
virtual_dict begin
  /width  234.168 def
  /height 46.6921 def
  /left   0.784 def
  /right  0.784 def
  /top    15.51 def
  /bottom 1 def
end % of virtual_dict
/bfs 7.97132 def
/lh 7.97132 def
/cw 4.78279 def
% Dictionary for ISO-8859-1 support
/iso1dict 9 dict begin
  /fCourier ISO-8859-1Encoding /Courier reencode_font
  /fCourier-Bold ISO-8859-1Encoding /Courier-Bold reencode_font
  /fCourier-BoldOblique ISO-8859-1Encoding /Courier-BoldOblique reencode_font
  /fCourier-Oblique ISO-8859-1Encoding /Courier-Oblique reencode_font
  /fHelvetica ISO-8859-1Encoding /Helvetica reencode_font
  /fHelvetica-Bold ISO-8859-1Encoding /Helvetica-Bold reencode_font
  /fHelvetica-BoldOblique ISO-8859-1Encoding /Helvetica-BoldOblique reencode_font
  /fPalatino-Roman,Times-Roman ISO-8859-1Encoding /Palatino-Roman reencode_font
  /fTimes-Bold ISO-8859-1Encoding /Times-Bold reencode_font
currentdict end def
/bgcolor [ 0 0 0 ] def
/bg false def
/ul false def
/bx false def
% The font for line numbering
/f# /Helvetica findfont bfs .6 mul scalefont def
/fSymbol /Symbol findfont def
/sx 0 def
/x0 0 def
/y0 0 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
100.692 24 translate 90 rotate
%%EndPageSetup
gsave
iso1dict begin
page_dict begin
  ()
  before
end % of page_dict
% Move to the corner of the inside page heading area
-0 15 translate
gsave % begin virtual
0 0 translate
/x0 4.68832 store
/y0 22.9222 store
x0 y0 moveto
(This is the ) p (Text Body) L n
(Which can use different ) p
(Faces) K
(, and even include) p n
(special characters such as ) S
(\334) sy
(, ) p
(\251) sy
( etc.) p n
virtual_dict begin
  (Center Title)
  (Left Title)
  (Left Title)
  after
end % of virtual_dict
grestore % end virtual
% End of the virtual pages section
grestore
page_dict begin
  (Header)
  ()
  ()
  (Right Footer)
  (Center Footer)
  (Left Footer)
  after
end % of page_dict
end % of iso1dict
pagesave restore
%%Trailer
end % of a2ps_dict
%%EOF
