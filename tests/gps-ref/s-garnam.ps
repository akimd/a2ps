%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
(Test Files) 35.25 water
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.431713 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (------------------------------------------------------------------------------) c n
0 T (--                                                                          --) N
0 T (--                            GLADE COMPONENTS                              --) N
0 T (--                                                                          --) N
(5) # (--                 S Y S T E M . G A R L I C . N A M I N G                  --) N
0 T (--                                                                          --) N
0 T (--                                 B o d y                                  --) N
0 T (--                                                                          --) N
0 T (--                                                                          --) N
(10) # (--         Copyright \(C\) 1996,1997 Free Software Foundation, Inc.           --) N
0 T (--                                                                          --) N
0 T (-- GARLIC is free software;  you can redistribute it and/or modify it under --) N
0 T (-- terms of the  GNU General Public License  as published by the Free Soft- --) N
0 T (-- ware Foundation;  either version 3,  or \(at your option\)  any later ver- --) N
(15) # (-- sion.  GARLIC is distributed  in the hope that  it will be  useful,  but --) N
0 T (-- WITHOUT ANY WARRANTY;  without even the implied warranty of MERCHANTABI- --) N
0 T (-- LITY or  FITNESS FOR A PARTICULAR PURPOSE.  See the  GNU General Public  --) N
0 T (-- License  for more details.  You should have received  a copy of the GNU  --) N
0 T (-- General Public License  distributed with GARLIC;  see file COPYING.  If  --) N
(20) # (-- not, write to the Free Software Foundation, 59 Temple Place - Suite 330, --) N
0 T (-- Boston, MA 02111-1307, USA.                                              --) N
0 T (--                                                                          --) N
0 T (-- As a special exception,  if other files  instantiate  generics from this --) N
0 T (-- unit, or you link  this unit with other files  to produce an executable, --) N
(25) # (-- this  unit  does not  by itself cause  the resulting  executable  to  be --) N
0 T (-- covered  by the  GNU  General  Public  License.  This exception does not --) N
0 T (-- however invalidate  any other reasons why  the executable file  might be --) N
0 T (-- covered by the  GNU Public License.                                      --) N
0 T (--                                                                          --) N
(30) # (--               GLADE  is maintained by ACT Europe.                        --) N
0 T (--               \(email: glade-report@act-europe.fr\)                        --) N
0 T (--                                                                          --) N
0 T (------------------------------------------------------------------------------) N
0 T () N
(35) # () S
(with) K
( Ada.Exceptions;) p n
0 T () S
(with) K
( Interfaces.C; ) p
(use) K
( Interfaces.C;) p n
0 T () S
(with) K
( Interfaces.C.Strings; ) p
(use) K
( Interfaces.C.Strings;) p n
0 T () S
(with) K
( System.Garlic.Constants; ) p
(use) K
( System.Garlic.Constants;) p n
0 T () S
(with) K
( System.Garlic.OS_Lib; ) p
(use) K
( System.Garlic.OS_Lib;) p n
(40) # () S
(with) K
( Unchecked_Conversion;) p n
0 T () S
(with) K
( Unchecked_Deallocation;) p n
0 T () N
0 T () S
(package body ) K
(System.Garlic.Naming) L
( is) K n
0 T () N
(45) # () S
(   ) p
(use) K
( Thin;) p n
0 T () N
0 T (   Default_Buffer_Size : ) S
(constant) K
( := 16384;) p n
0 T () N
0 T (   ) S
(procedure ) K
(Free) l
( is) K n
(50) # () S
(      ) p
(new) K
( Unchecked_Deallocation \(char_array, char_array_access\);) p n
0 T () N
0 T (   ) S
(function ) K
(Allocate) l
( \(Size : Positive := Default_Buffer_Size\)) p n
0 T (     ) S
(return) K
( char_array_access;) p n
0 T (   ) S
(--  Allocate a buffer.) c n
(55) # () N
0 T () S
(   ) p
(function ) K
(Parse_Entry) l
( \(Host : Hostent\)) p n
0 T (     ) S
(return) K
( Host_Entry;) p n
0 T (   ) S
(--  Parse an entry.) c n
0 T () N
(60) # () S
(   ) p
(procedure ) K
(Raise_Naming_Error) l n
0 T () S
(     \(Errno   : ) p
(in) K
( C.Int;) p n
0 T (      Message : ) S
(in) K
( String\);) p n
0 T (   ) S
(--  Raise the exception Naming_Error with an appropriate error message.) c n
0 T () N
(65) # () S
(   ) p
(protected) K
( Gethost_In_Progress ) p
(is) K n
0 T () S
(      ) p
(entry) K
( Lock;) p n
0 T (      ) S
(procedure ) K
(Unlock) l
(;) p n
0 T (   ) S
(private) K n
0 T () S
(      Locked : Boolean := False;) p n
(70) # (   ) S
(end) K
( Gethost_In_Progress;) p n
(s-garnam.adb) (right) (1) title
border
grestore
(The room for the header) rhead
(Printed by Somebody from a machine) (Right) (1) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 2
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
(Test Files) 35.25 water
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.431713 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (   ) p
(--  We have to protect this.) c n
0 T () N
0 T () S
(   ) p
(----------------) c n
0 T () S
(   ) p
(-- Address_Of --) c n
(75) # () S
(   ) p
(----------------) c n
0 T () N
0 T () S
(   ) p
(function ) K
(Address_Of) l
( \(Something : String\)) p n
0 T (     ) S
(return) K
( Address) p n
0 T (   ) S
(is) K n
(80) # () S
(   ) p
(begin) K n
0 T () S
(      ) p
(if) K
( Is_IP_Address \(Something\) ) p
(then) K n
0 T () S
(         ) p
(return) K
( Value \(Something\);) p n
0 T (      ) S
(else) K n
0 T () S
(         ) p
(return) K
( Info_Of \(Something\) .Addresses \(1\);) p n
(85) # (      ) S
(end) K
( ) p
(if) K
(;) p n
0 T (   ) S
(end) K
( Address_Of;) p n
0 T () N
0 T (   ) S
(------------) c n
0 T () S
(   ) p
(-- Adjust --) c n
(90) # () S
(   ) p
(------------) c n
0 T () N
0 T () S
(   ) p
(procedure ) K
(Adjust) l
( \(Object : ) p
(in) K
( ) p
(out) K
( Host_Entry\)) p n
0 T (   ) S
(is) K n
0 T () S
(      Aliases : String_Array ) p
(renames) K
( Object.Aliases;) p n
(95) # (   ) S
(begin) K n
0 T () S
(      Object.Name := ) p
(new) K
( String'\(Object.Name.) p
(all) K
(\);) p n
0 T (      ) S
(for) K
( I ) p
(in) K
( Aliases'Range ) p
(loop) K n
0 T () S
(         Aliases \(I\) := ) p
(new) K
( String'\(Aliases \(I\) .) p
(all) K
(\);) p n
0 T (      ) S
(end) K
( ) p
(loop) K
(;) p n
(100) # (   ) S
(end) K
( Adjust;) p n
0 T () N
0 T (   ) S
(--------------) c n
0 T () S
(   ) p
(-- Allocate --) c n
0 T () S
(   ) p
(--------------) c n
(105) # () N
0 T () S
(   ) p
(function ) K
(Allocate) l n
0 T () S
(     \(Size : Positive := Default_Buffer_Size\)) p n
0 T (     ) S
(return) K
( char_array_access) p n
0 T (   ) S
(is) K n
(110) # () S
(   ) p
(begin) K n
0 T () S
(      ) p
(return) K
( ) p
(new) K
( char_array \(1 .. size_t \(Size\)\);) p n
0 T (   ) S
(end) K
( Allocate;) p n
0 T () N
0 T (   ) S
(-----------------) c n
(115) # () S
(   ) p
(-- Any_Address --) c n
0 T () S
(   ) p
(-----------------) c n
0 T () N
0 T () S
(   ) p
(function ) K
(Any_Address) l
( return) K
( Address) p n
0 T (   ) S
(is) K n
(120) # () S
(   ) p
(begin) K n
0 T () S
(      ) p
(return) K
( To_Address \(Inaddr_Any\);) p n
0 T (   ) S
(end) K
( Any_Address;) p n
0 T () N
0 T (   ) S
(--------------) c n
(125) # () S
(   ) p
(-- Finalize --) c n
0 T () S
(   ) p
(--------------) c n
0 T () N
0 T () S
(   ) p
(procedure ) K
(Finalize) l
( \(Object : ) p
(in) K
( ) p
(out) K
( Host_Entry\)) p n
0 T (   ) S
(is) K n
(130) # () S
(      Aliases : String_Array ) p
(renames) K
( Object.Aliases;) p n
0 T (      ) S
(procedure ) K
(Free) l
( is) K n
0 T () S
(         ) p
(new) K
( Unchecked_Deallocation \(String, String_Access\);) p n
0 T (   ) S
(begin) K n
0 T () S
(      Free \(Object.Name\);) p n
(135) # (      ) S
(for) K
( I ) p
(in) K
( Aliases'Range ) p
(loop) K n
0 T () S
(         Free \(Aliases \(I\)\);) p n
0 T (      ) S
(end) K
( ) p
(loop) K
(;) p n
0 T (   ) S
(end) K
( Finalize;) p n
0 T () N
(140) # (   ) S
(-------------------------) c n
(s-garnam.adb) (right) (2) title
border
grestore
(The room for the header) rhead
(Printed by Somebody from a machine) (Right) (2) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (3) 3
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
(Test Files) 35.25 water
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.431713 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (   ) p
(-- Gethost_In_Progress --) c n
0 T () S
(   ) p
(-------------------------) c n
0 T () N
0 T () S
(   ) p
(protected) K
( ) p
(body) K
( Gethost_In_Progress ) p
(is) K n
(145) # () N
0 T () S
(      ) p
(----------) c n
0 T () S
(      ) p
(-- Lock --) c n
0 T () S
(      ) p
(----------) c n
0 T () N
(150) # () S
(      ) p
(entry) K
( Lock ) p
(when) K
( ) p
(not) K
( Locked ) p
(is) K n
0 T () S
(      ) p
(begin) K n
0 T () S
(         Locked := True;) p n
0 T (      ) S
(end) K
( Lock;) p n
0 T () N
(155) # (      ) S
(------------) c n
0 T () S
(      ) p
(-- Unlock --) c n
0 T () S
(      ) p
(------------) c n
0 T () N
0 T () S
(      ) p
(procedure ) K
(Unlock) l
( is) K n
(160) # () S
(      ) p
(begin) K n
0 T () S
(         Locked := False;) p n
0 T (      ) S
(end) K
( Unlock;) p n
0 T () N
0 T (   ) S
(end) K
( Gethost_In_Progress;) p n
(165) # () N
0 T (   ) S
(---------------) c n
0 T () S
(   ) p
(-- Host_Name --) c n
0 T () S
(   ) p
(---------------) c n
0 T () N
(170) # () S
(   ) p
(function ) K
(Host_Name) l
( return) K
( String) p n
0 T (   ) S
(is) K n
0 T () S
(      Buff   : char_array_access  := Allocate;) p n
0 T (      Buffer : ) S
(constant) K
( chars_ptr := To_Chars_Ptr \(Buff\);) p n
0 T (      Res    : ) S
(constant) K
( int       := C_Gethostname \(Buffer, Buff'Length\);) p n
(175) # (   ) S
(begin) K n
0 T () S
(      ) p
(if) K
( Res = Failure ) p
(then) K n
0 T () S
(         Free \(Buff\);) p n
0 T (         Raise_Naming_Error \(C_Errno, ""\);) N
0 T (      ) S
(end) K
( ) p
(if) K
(;) p n
(180) # (      ) S
(declare) K n
0 T () S
(         Result : ) p
(constant) K
( String := Value \(Buffer\);) p n
0 T (      ) S
(begin) K n
0 T () S
(         Free \(Buff\);) p n
0 T (         ) S
(return) K
( Result;) p n
(185) # (      ) S
(end) K
(;) p n
0 T (   ) S
(end) K
( Host_Name;) p n
0 T () N
0 T (   ) S
(-----------) c n
0 T () S
(   ) p
(-- Image --) c n
(190) # () S
(   ) p
(-----------) c n
0 T () N
0 T () S
(   ) p
(function ) K
(Image) l
( \(Add : Address\) ) p
(return) K
( String) p n
0 T (   ) S
(is) K n
0 T () N
(195) # () S
(      ) p
(function ) K
(Image) l
( \(A : Address_Component\) ) p
(return) K
( String;) p n
0 T (      ) S
(--  Return the string corresponding to its argument without) c n
0 T () S
(      ) p
(--  the leading space.) c n
0 T () N
0 T () S
(      ) p
(-----------) c n
(200) # () S
(      ) p
(-- Image --) c n
0 T () S
(      ) p
(-----------) c n
0 T () N
0 T () S
(      ) p
(function ) K
(Image) l
( \(A : Address_Component\)) p n
0 T (        ) S
(return) K
( String) p n
(205) # (      ) S
(is) K n
0 T () S
(         Im : ) p
(constant) K
( String := Address_Component'Image \(A\);) p n
0 T (      ) S
(begin) K n
0 T () S
(         ) p
(return) K
( Im \(2 .. Im'Last\);) p n
0 T (      ) S
(end) K
( Image;) p n
(210) # () N
(s-garnam.adb) (right) (3) title
border
grestore
(The room for the header) rhead
(Printed by Somebody from a machine) (Right) (3) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (4) 4
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
(Test Files) 35.25 water
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.431713 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (   ) p
(begin) K n
0 T () S
(      ) p
(return) K
( Image \(Add.H1\) & ") p
(.) str
(" & Image \(Add.H2\) & ") p
(.) str
(" &) p n
0 T (        Image \(Add.H3\) & ") S
(.) str
(" & Image \(Add.H4\);) p n
0 T (   ) S
(end) K
( Image;) p n
(215) # () N
0 T (   ) S
(-------------) c n
0 T () S
(   ) p
(-- Info_Of --) c n
0 T () S
(   ) p
(-------------) c n
0 T () N
(220) # () S
(   ) p
(function ) K
(Info_Of) l
( \(Name : String\)) p n
0 T (     ) S
(return) K
( Host_Entry) p n
0 T (   ) S
(is) K n
0 T () S
(      Res    : Hostent_Access;) p n
0 T (      C_Name : chars_ptr := New_String \(Name\);) N
(225) # (   ) S
(begin) K n
0 T () S
(      Gethost_In_Progress.Lock;) p n
0 T (      Res := C_Gethostbyname \(C_Name\);) N
0 T (      Free \(C_Name\);) N
0 T (      ) S
(if) K
( Res = ) p
(null) K
( ) p
(then) K n
(230) # () S
(         Gethost_In_Progress.Unlock;) p n
0 T (         Raise_Naming_Error \(C_Errno, Name\);) N
0 T (      ) S
(end) K
( ) p
(if) K
(;) p n
0 T (      ) S
(declare) K n
0 T () S
(         Result : ) p
(constant) K
( Host_Entry := Parse_Entry \(Res.) p
(all) K
(\);) p n
(235) # (      ) S
(begin) K n
0 T () S
(         Gethost_In_Progress.Unlock;) p n
0 T (         ) S
(return) K
( Result;) p n
0 T (      ) S
(end) K
(;) p n
0 T (   ) S
(end) K
( Info_Of;) p n
(240) # () N
0 T (   ) S
(-------------) c n
0 T () S
(   ) p
(-- Info_Of --) c n
0 T () S
(   ) p
(-------------) c n
0 T () N
(245) # () S
(   ) p
(function ) K
(Info_Of) l
( \(Addr : Address\)) p n
0 T (     ) S
(return) K
( Host_Entry) p n
0 T (   ) S
(is) K n
0 T () S
(      ) p
(function ) K
(Convert) l
( is) K n
0 T () S
(         ) p
(new) K
( Unchecked_Conversion \(Source ) p
(\336) sy
( In_Addr_Access,) p n
(250) # (                                   Target ) S
(\336) sy
( chars_ptr\);) p n
0 T (      Temp    : ) S
(aliased) K
( In_Addr    := To_In_Addr \(Addr\);) p n
0 T (      C_Addr  : ) S
(constant) K
( chars_ptr := Convert \(Temp'Unchecked_Access\);) p n
0 T (      Res     : Hostent_Access;) N
0 T (   ) S
(begin) K n
(255) # () S
(      Gethost_In_Progress.Lock;) p n
0 T (      Res := C_Gethostbyaddr \(C_Addr,) N
0 T (                              C.Int \(Temp'Size / CHAR_BIT\),) N
0 T (                              Af_Inet\);) N
0 T (      ) S
(if) K
( Res = ) p
(null) K
( ) p
(then) K n
(260) # () S
(         Gethost_In_Progress.Unlock;) p n
0 T (         Raise_Naming_Error \(C_Errno, Image \(Addr\)\);) N
0 T (      ) S
(end) K
( ) p
(if) K
(;) p n
0 T (      ) S
(declare) K n
0 T () S
(         Result : ) p
(constant) K
( Host_Entry := Parse_Entry \(Res.) p
(all) K
(\);) p n
(265) # (      ) S
(begin) K n
0 T () S
(         Gethost_In_Progress.Unlock;) p n
0 T (         ) S
(return) K
( Result;) p n
0 T (      ) S
(end) K
(;) p n
0 T (   ) S
(end) K
( Info_Of;) p n
(270) # () N
0 T (   ) S
(------------------------) c n
0 T () S
(   ) p
(-- Info_Of_Name_Or_IP --) c n
0 T () S
(   ) p
(------------------------) c n
0 T () N
(275) # () S
(   ) p
(function ) K
(Info_Of_Name_Or_IP) l
( \(Something : String\)) p n
0 T (     ) S
(return) K
( Host_Entry) p n
0 T (   ) S
(is) K n
0 T () S
(   ) p
(begin) K n
0 T () S
(      ) p
(if) K
( Is_IP_Address \(Something\) ) p
(then) K n
(280) # () S
(         ) p
(return) K
( Info_Of \(Value \(Something\)\);) p n
(s-garnam.adb) (right) (4) title
border
grestore
(The room for the header) rhead
(Printed by Somebody from a machine) (Right) (4) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (5) 5
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
(Test Files) 35.25 water
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.431713 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (      ) p
(else) K n
0 T () S
(         ) p
(return) K
( Info_Of \(Something\);) p n
0 T (      ) S
(end) K
( ) p
(if) K
(;) p n
0 T (   ) S
(end) K
( Info_Of_Name_Or_IP;) p n
(285) # () N
0 T (   ) S
(-------------------) c n
0 T () S
(   ) p
(-- Is_Ip_Address --) c n
0 T () S
(   ) p
(-------------------) c n
0 T () N
(290) # () S
(   ) p
(function ) K
(Is_IP_Address) l
( \(Something : String\)) p n
0 T (     ) S
(return) K
( Boolean) p n
0 T (   ) S
(is) K n
0 T () S
(      First : ) p
(constant) K
( Natural := Character'Pos \(Something \(Something'First\)\);) p n
0 T (   ) S
(begin) K n
(295) # () S
(      ) p
(return) K
( First ) p
(\263) sy
( Character'Pos \(') p
(0) str
('\) ) p
(and) K
( ) p
(then) K n
0 T () S
(        First ) p
(\243) sy
( Character'Pos \(') p
(9) str
('\);) p n
0 T (   ) S
(end) K
( Is_IP_Address;) p n
0 T () N
0 T (   ) S
(-------------) c n
(300) # () S
(   ) p
(-- Name_Of --) c n
0 T () S
(   ) p
(-------------) c n
0 T () N
0 T () S
(   ) p
(function ) K
(Name_Of) l
( \(Something : String\)) p n
0 T (     ) S
(return) K
( String) p n
(305) # (   ) S
(is) K n
0 T () S
(      Hostent : ) p
(constant) K
( Host_Entry := Info_Of_Name_Or_IP \(Something\);) p n
0 T (   ) S
(begin) K n
0 T () S
(      ) p
(if) K
( Hostent.Name = ) p
(null) K
( ) p
(then) K n
0 T () S
(         Ada.Exceptions.Raise_Exception \(Naming_Error'Identity,) p n
(310) # (                                         ") S
(No name for ) str
(" & Something\);) p n
0 T (      ) S
(end) K
( ) p
(if) K
(;) p n
0 T (      ) S
(return) K
( Hostent.Name.) p
(all) K
(;) p n
0 T (   ) S
(end) K
( Name_Of;) p n
0 T () N
(315) # (   ) S
(-----------------) c n
0 T () S
(   ) p
(-- Parse_Entry --) c n
0 T () S
(   ) p
(-----------------) c n
0 T () N
0 T () S
(   ) p
(function ) K
(Parse_Entry) l
( \(Host : Hostent\)) p n
(320) # (     ) S
(return) K
( Host_Entry) p n
0 T (   ) S
(is) K n
0 T () S
(      C_Aliases : ) p
(constant) K
( Thin.Chars_Ptr_Array    :=) p n
0 T (        Chars_Ptr_Pointers.Value \(Host.H_Aliases\);) N
0 T (      C_Addr    : ) S
(constant) K
( In_Addr_Access_Array :=) p n
(325) # (                                    In_Addr_Access_Pointers.Value) N
0 T (                                      \(Host.H_Addr_List\);) N
0 T (      Result    : Host_Entry \(N_Aliases     ) S
(\336) sy
( C_Aliases'Length - 1,) p n
0 T (                              N_Addresses ) S
(\336) sy
( C_Addr'Length - 1\);) p n
0 T (   ) S
(begin) K n
(330) # () S
(      Result.Name := ) p
(new) K
( String'\(Value \(Host.H_Name\)\);) p n
0 T (      ) S
(for) K
( I ) p
(in) K
( 1 .. Result.Aliases'Last ) p
(loop) K n
0 T () S
(         ) p
(declare) K n
0 T () S
(            Index   : Natural := I - 1 + Natural \(C_Aliases'First\);) p n
0 T (            Current : chars_ptr ) S
(renames) K
( C_Aliases \(size_t \(Index\)\);) p n
(335) # (         ) S
(begin) K n
0 T () S
(            Result.Aliases \(I\) := ) p
(new) K
( String'\(Value \(Current\)\);) p n
0 T (         ) S
(end) K
(;) p n
0 T (      ) S
(end) K
( ) p
(loop) K
(;) p n
0 T (      ) S
(for) K
( I ) p
(in) K
( Result.Addresses'Range ) p
(loop) K n
(340) # () S
(         ) p
(declare) K n
0 T () S
(            Index   : Natural := I - 1 + Natural \(C_Addr'First\);) p n
0 T (            Current : In_Addr_Access ) S
(renames) K
( C_Addr \(Index\);) p n
0 T (         ) S
(begin) K n
0 T () S
(            Result.Addresses \(I\) := To_Address \(Current.) p
(all) K
(\);) p n
(345) # (         ) S
(end) K
(;) p n
0 T (      ) S
(end) K
( ) p
(loop) K
(;) p n
0 T (      ) S
(return) K
( Result;) p n
0 T (   ) S
(end) K
( Parse_Entry;) p n
0 T () N
(350) # (   ) S
(------------------------) c n
(s-garnam.adb) (right) (5) title
border
grestore
(The room for the header) rhead
(Printed by Somebody from a machine) (Right) (5) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (6) 6
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
(Test Files) 35.25 water
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.431713 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (   ) p
(-- Raise_Naming_Error --) c n
0 T () S
(   ) p
(------------------------) c n
0 T () N
0 T () S
(   ) p
(procedure ) K
(Raise_Naming_Error) l n
(355) # () S
(     \(Errno   : ) p
(in) K
( C.Int;) p n
0 T (      Message : ) S
(in) K
( String\)) p n
0 T (   ) S
(is) K n
0 T () N
0 T () S
(      ) p
(function ) K
(Error_Message) l
( return) K
( String;) p n
(360) # (      ) S
(--  Return the message according to Errno.) c n
0 T () N
0 T () S
(      ) p
(-------------------) c n
0 T () S
(      ) p
(-- Error_Message --) c n
0 T () S
(      ) p
(-------------------) c n
(365) # () N
0 T () S
(      ) p
(function ) K
(Error_Message) l
( return) K
( String ) p
(is) K n
0 T () S
(      ) p
(begin) K n
0 T () S
(         ) p
(case) K
( Errno ) p
(is) K n
0 T () S
(            ) p
(when) K
( Host_Not_Found ) p
(\336) sy
( ) p
(return) K
( ") p
(Host not found) str
(";) p n
(370) # (            ) S
(when) K
( Try_Again      ) p
(\336) sy
( ) p
(return) K
( ") p
(Try again) str
(";) p n
0 T (            ) S
(when) K
( No_Recovery    ) p
(\336) sy
( ) p
(return) K
( ") p
(No recovery) str
(";) p n
0 T (            ) S
(when) K
( No_Address     ) p
(\336) sy
( ) p
(return) K
( ") p
(No address) str
(";) p n
0 T (            ) S
(when) K
( ) p
(others) K
(         ) p
(\336) sy
( ) p
(return) K
( ") p
(Unknown error) str
(" &) p n
0 T (                                          C.Int'Image \(Errno\);) N
(375) # (         ) S
(end) K
( ) p
(case) K
(;) p n
0 T (      ) S
(end) K
( Error_Message;) p n
0 T () N
0 T (   ) S
(begin) K n
0 T () S
(      Ada.Exceptions.Raise_Exception \(Naming_Error'Identity,) p n
(380) # (                                      Error_Message & ") S
(: ) str
(" & Message\);) p n
0 T (   ) S
(end) K
( Raise_Naming_Error;) p n
0 T () N
0 T (   ) S
(----------------) c n
0 T () S
(   ) p
(-- To_Address --) c n
(385) # () S
(   ) p
(----------------) c n
0 T () N
0 T () S
(   ) p
(function ) K
(To_Address) l
( \(Addr : In_Addr\) ) p
(return) K
( Address) p n
0 T (   ) S
(is) K n
0 T () S
(   ) p
(begin) K n
(390) # () S
(      ) p
(return) K
( \(H1 ) p
(\336) sy
( Address_Component \(Addr.S_B1\),) p n
0 T (              H2 ) S
(\336) sy
( Address_Component \(Addr.S_B2\),) p n
0 T (              H3 ) S
(\336) sy
( Address_Component \(Addr.S_B3\),) p n
0 T (              H4 ) S
(\336) sy
( Address_Component \(Addr.S_B4\)\);) p n
0 T (   ) S
(end) K
( To_Address;) p n
(395) # () N
0 T (   ) S
(----------------) c n
0 T () S
(   ) p
(-- To_In_Addr --) c n
0 T () S
(   ) p
(----------------) c n
0 T () N
(400) # () S
(   ) p
(function ) K
(To_In_Addr) l
( \(Addr : Address\) ) p
(return) K
( In_Addr) p n
0 T (   ) S
(is) K n
0 T () S
(   ) p
(begin) K n
0 T () S
(      ) p
(return) K
( \(S_B1 ) p
(\336) sy
( unsigned_char \(Addr.H1\),) p n
0 T (              S_B2 ) S
(\336) sy
( unsigned_char \(Addr.H2\),) p n
(405) # (              S_B3 ) S
(\336) sy
( unsigned_char \(Addr.H3\),) p n
0 T (              S_B4 ) S
(\336) sy
( unsigned_char \(Addr.H4\)\);) p n
0 T (   ) S
(end) K
( To_In_Addr;) p n
0 T () N
0 T (   ) S
(-----------) c n
(410) # () S
(   ) p
(-- Value --) c n
0 T () S
(   ) p
(-----------) c n
0 T () N
0 T () S
(   ) p
(function ) K
(Value) l
( \(Add : String\) ) p
(return) K
( Address) p n
0 T (   ) S
(is) K n
(415) # () S
(      ) p
(function ) K
(Convert) l
( is) K n
0 T () S
(         ) p
(new) K
( Unchecked_Conversion \(Source ) p
(\336) sy
( unsigned_long,) p n
0 T (                                   Target ) S
(\336) sy
( In_Addr\);) p n
0 T (      C_Add     : chars_ptr        := New_String \(Add\);) N
0 T (      Converted : ) S
(constant) K
( In_Addr := Convert \(C_Inet_Addr \(C_Add\)\);) p n
(420) # (   ) S
(begin) K n
(s-garnam.adb) (right) (6) title
border
grestore
(The room for the header) rhead
(Printed by Somebody from a machine) (Right) (6) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (7) 7
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
(Test Files) 35.25 water
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.431713 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (      Free \(C_Add\);) p n
0 T (      ) S
(return) K
( \(H1 ) p
(\336) sy
( Address_Component \(Converted.S_B1\),) p n
0 T (              H2 ) S
(\336) sy
( Address_Component \(Converted.S_B2\),) p n
0 T (              H3 ) S
(\336) sy
( Address_Component \(Converted.S_B3\),) p n
(425) # (              H4 ) S
(\336) sy
( Address_Component \(Converted.S_B4\)\);) p n
0 T (   ) S
(end) K
( Value;) p n
0 T () N
0 T () S
(end) K
( System.Garlic.Naming;) p n
(s-garnam.adb) (right) (7) title
border
grestore
(The room for the header) rhead
(Printed by Somebody from a machine) (Right) (7) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
