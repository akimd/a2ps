%%Page: (1) 1
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
(Test Files) 35.25 water
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.431713 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T ({-----------------------------------------------------------------------------) c n
0 T (The contents of this file are subject to the GNU General Public License) N
0 T (Version 1.1 or later \(the "License"\); you may not use this file except in) N
0 T (compliance with the License. You may obtain a copy of the License at) N
(5) # (http://www.gnu.org/copyleft/gpl.html) N
0 T () N
0 T (Software distributed under the License is distributed on an "AS IS" basis,) N
0 T (WITHOUT WARRANTY OF ANY KIND, either expressed or implied. See the License for) N
0 T (the specific language governing rights and limitations under the License.) N
(10) # () N
0 T (The Initial Developer of the Original Code is Michael Elsdrfer.) N
0 T (All Rights Reserved.) N
0 T () N
0 T (You may retrieve the latest version of this file at the NTFS Link Homepage) N
(15) # (located at http://www.elsdoerfer.net/ntfslink/) N
0 T () N
0 T (Please note:) N
0 T (This is /not/ a real shell extension. We use this fake COM object factory to) N
0 T (register the "ShellNew" menu items. It's just the easiest way to do this,) N
(20) # (because the Delphi RTL will automatically call the UpdateRegistry\(\) method if) N
0 T (a client calls DllRegisterServer.) N
0 T (-----------------------------------------------------------------------------}) N
0 T () N
0 T () S
(unit) K
( ) p
(ShellNewDummyHook) L
(;) p n
(25) # () N
0 T () S
(interface) l n
0 T () N
0 T () S
(uses) K n
0 T () S
(  Windows, ComObj, ActiveX;) p n
(30) # () N
0 T () S
(type) K n
0 T () S
(  TShellNewDummyHook ) p
(\272) sy
( class\(TComObject) p
(\(* no interfaces needed, it's a fake! *\)) C
(\)) p n
0 T (  ) S
(end) K
(;) p n
0 T () N
(35) # (  TShellNewDummyFactory ) S
(\272) sy
( class\(TComObjectFactory\)) p n
0 T (  public) N
0 T (    ) S
(procedure) K
( ) p
(UpdateRegistry) l
(\(Register: ) p
(Boolean) k
(\); override;) p n
0 T (  ) S
(end) K
(;) p n
0 T () N
(40) # (implementation) N
0 T () N
0 T () S
(uses) K n
0 T () S
(  ComServ, SysUtils, JclRegistry;) p n
0 T () N
(45) # () S
({ TShellNewDummyFactory }) c n
0 T () N
0 T () S
(procedure) K
( ) p
(TShellNewDummyFactory.UpdateRegistry) l
(\(Register: ) p
(Boolean) k
(\);) p n
0 T () N
0 T (  ) S
(procedure) K
( ) p
(CreateShellNewStructure) l
(\(FileExtKey, FileClassKey,) p n
(50) # (    DllFunctionName, ItemCaption: ) S
(string) k
(; IconIndex: ) p
(Integer) k
(\);) p n
0 T (  ) S
(begin) K n
0 T () S
(    // Create the ) p
(file) K
( extension key + the "ShellNew" key) p n
0 T (    CreateRegKey\(FileExtKey, '', FileClassKey, HKEY_CLASSES_ROOT\);) N
0 T (    CreateRegKey\(FileExtKey + ') S
(\\ShellNew) str
(', ') p
(Command) str
(',) p n
(55) # (                 ') S
(rundll32.exe ") str
(' + ComServer.ServerFileName + ') p
(",) str
(' +) p n
0 T (                    DLLFunctionName + ') S
( %1) str
(',) p n
0 T (                 HKEY_CLASSES_ROOT\);) N
0 T (    // Create the ) S
(file) K
( class key, + the the icon ) p
(\331) sy
( a command sub-key) p n
0 T (    CreateRegKey\(FileClassKey, '', ItemCaption, HKEY_CLASSES_ROOT\);) N
(60) # (    CreateRegKey\(FileClassKey + ') S
(\\DefaultIcon) str
(', '',) p n
0 T (                 ComServer.ServerFileName + ') S
(,) str
(' + IntToStr\(IconIndex\),) p n
0 T (                 HKEY_CLASSES_ROOT\);) N
0 T (    CreateRegKey\(FileClassKey + ') S
(\\Shell\\Open\\Command) str
(', '', ') p
(.) str
(',) p n
0 T (                 HKEY_CLASSES_ROOT\);) N
(65) # (  ) S
(end) K
(;) p n
0 T () N
0 T () S
(const) K n
0 T () S
(  HARDLINK_FILEEXT_KEY   ) p
(\272) sy
( ') p
(.ntfs-hardlink) str
(';) p n
0 T (  HARDLINK_FILECLASS_KEY ) S
(\272) sy
( ') p
(NTFSLink.Hardlink) str
(';) p n
(70) # (  JUNCTION_FILEEXT_KEY   ) S
(\272) sy
( ') p
(.ntfs-junction) str
(';) p n
(ShellNewDummyHook.pas) (right) (1) title
border
grestore
(The room for the header) rhead
(Printed by Somebody from a machine) (Right) (1) footer
end % of iso1dict
pagesave restore
showpage
%%Page: (2) 2
%%BeginPageSetup
/pagesave save def
%%EndPageSetup
iso1dict begin
(Test Files) 35.25 water
gsave
llx lly 12 add translate
/v 0 store
/x0 x v get 4.431713 add sx cw mul add store
/y0 y v get bfs th add sub store
x0 y0 moveto
0 T (  JUNCTION_FILECLASS_KEY ) p
(\272) sy
( ') p
(NTFSLink.Junction) str
(';) p n
0 T () S
(begin) K n
0 T () S
(  ) p
(if) K
( Register ) p
(then) K n
0 T () S
(  ) p
(begin) K n
(75) # () S
(    CreateShellNewStructure\(HARDLINK_FILEEXT_KEY, HARDLINK_FILECLASS_KEY,) p n
0 T (                            ') S
(NewHardlinkDlg) str
(', ') p
(NTFS Hardlink) str
(', 0\);) p n
0 T (    CreateShellNewStructure\(JUNCTION_FILEEXT_KEY, JUNCTION_FILECLASS_KEY,) N
0 T (                            ') S
(NewJunctionDlg) str
(', ') p
(NTFS Junction Point) str
(', 1\);) p n
0 T (  ) S
(end) K
( ) p
(else) K n
(80) # () S
(  ) p
(begin) K n
0 T () S
(    try RegDeleteKeyTree\(HKEY_CLASSES_ROOT, HARDLINK_FILEEXT_KEY\); except ) p
(end) K
(;) p n
0 T (    try RegDeleteKeyTree\(HKEY_CLASSES_ROOT, HARDLINK_FILECLASS_KEY\); except ) S
(end) K
(;) p n
0 T (    try RegDeleteKeyTree\(HKEY_CLASSES_ROOT, JUNCTION_FILEEXT_KEY\); except ) S
(end) K
(;) p n
0 T (    try RegDeleteKeyTree\(HKEY_CLASSES_ROOT, JUNCTION_FILECLASS_KEY\); except ) S
(end) K
(;) p n
(85) # (  ) S
(end) K
(;) p n
0 T (  ) N
0 T (  // *NO* inherited call here, it would just make unnecessary registry entries) N
0 T () S
(end) K
(;) p n
0 T () N
(90) # (initialization) N
0 T (  TShellNewDummyFactory.Create\(ComServer, TShellNewDummyHook, GUID_NULL, '', '',) N
0 T (      ciMultiInstance, tmApartment\);) N
0 T () N
0 T () S
(end) K
(.) p n
(ShellNewDummyHook.pas) (right) (2) title
border
grestore
(The room for the header) rhead
(Printed by Somebody from a machine) (Right) (2) footer
end % of iso1dict
pagesave restore
showpage

%%Trailer
end
%%EOF
