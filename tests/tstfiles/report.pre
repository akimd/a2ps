% This has been generated by a2ps version 4.8.2
% It should be processed by either LaTeX or
% a2ps with options -Epre to be printable.
%

%%prescript:skip
% a2ps skips everything between this line, and the one with `piks'

\documentclass{article}


%% These are LaTeX commands for prescript primitives.
\newcommand{\textbi}[1]{\textbf{\textit{#1}}}
\newcommand{\textsy}[1]{#1}
\newcommand{\keyword}[1]{\textbf{#1}}
\newcommand{\Keyword}[1]{\textbf{#1}}
\newcommand{\comment}[1]{\textit{#1}}
\newcommand{\Comment}[1]{\textit{#1}}
\newcommand{\label}[1]{\textit{#1}}
\newcommand{\Label}[1]{\textit{#1}}
\newcommand{\string}[1]{``\textit{#1}''}

%% These are made to be forgotten by LaTeX but seen by a2ps
%% To get a better LaTeX file, remove any occurrence.
\newcommand{\magicbf}[1]{}
\newcommand{\magicit}[1]{}
\newcommand{\magicbi}[1]{}
\newcommand{\magicrm}[1]{}
\newcommand{\magicsy}[1]{}
\newcommand{\magictt}[1]{}


%% There might be a better way to handle these
\newcommand{\footer}[1]{}
\newcommand{\header}[1]{}


%% These symbols are available in ps but not in LaTeX.
\newcommand{\carriagereturn}{$\backslash$n}
\newcommand{\suchthat}{``suchthat''}
\newcommand{\therefore}{``therefore''}
\newcommand{\radicalex}{``radicalex''}
\newcommand{\florin}{``florin''}
\newcommand{\lozenge}{\diamondsuit}
\newcommand{\register}{``register''}
\newcommand{\trademark}{(TM)}}
\newcommand{\varcopyright}{\copyright}
\newcommand{\vartrademark}{\trademark}
\newcommand{\varregister}{\register}
\newcommand{\apple}{``apple''}
\newcommand{\Alpha}{A}
\newcommand{\Beta}{B}
\newcommand{\Chi}{X}
\newcommand{\Epsilon}{E}
\newcommand{\Eta}{H}
\newcommand{\Iota}{I}
\newcommand{\Kappa}{K}
\newcommand{\Mu}{M}
\newcommand{\Nu}{N}
\newcommand{\Omicron}{O}
\newcommand{\Rho}{P}
\newcommand{\Tau}{T}
\newcommand{\Zeta}{Z}
\newcommand{\varUpsilon}{\Upsilon}
\newcommand{\omicron}{o}
%%prescript:piks
\begin{document}
\textbi{This is the automatic report about styles of a2ps, version 4.8.2}

\footer{Style sheets of a2ps version 4.8.2}
\header{a2ps report}



\section{Style definitions}
\textrm{The reader should first note that a2ps is _not_ a powerful syntactical pretty-printer: it just handles lexical structures, i.e., if in your language} IF IF == THEN THEN ELSE := IF ELSE ELSE := THEN \textrm{is legal, then a2ps is not the tool you need.  It is for the same reason that you can't expect a2ps to highlight the function definitions in C.
In the following is described how the style sheets are defined.  You can skip this section if you don't care how a2ps does this, and if you don't expect to implement new styles.}

\section{Consistancy}
\textrm{There are no found problems in the styles.}


\section{Known languages}
\begin{enumerate}
\magictt{ 1}\item ada
\magictt{ 2}\item c
\magictt{ 3}\item c++
\magictt{ 4}\item caml
\magictt{ 5}\item claire
\magictt{ 6}\item coq-vernacular
\magictt{37}\item Unity
\magictt{38}\item VERILOG
\magictt{39}\item VHDL
\magictt{40}\item zsh
\end{enumerate}



\section{Description of the language styles}
\magicbf{1} \subsection{ada style}
\begin{itemize}
\header{ada style}
\item \textrm{the abbreviation are:} adb, ads.
\item \textrm{first alphabet is:}
'\verb|A|\verb|B|\verb|C|\verb|D|\verb|E|\verb|F|\verb|G|\verb|H|\verb|I|\verb|J|\verb|K|\verb|L|\verb|M|\verb|N|\verb|O|\verb|P|\verb|Q|\verb|R|\verb|S|\verb|T|\verb|U|\verb|V|\verb|W|\verb|X|\verb|Y|\verb|Z|'(65-90), '\verb|a|\verb|b|\verb|c|\verb|d|\verb|e|\verb|f|\verb|g|\verb|h|\verb|i|\verb|j|\verb|k|\verb|l|\verb|m|\verb|n|\verb|o|\verb|p|\verb|q|\verb|r|\verb|s|\verb|t|\verb|u|\verb|v|\verb|w|\verb|x|\verb|y|\verb|z|'(97-122), '\verb|_|'(95), '\verb|)|'(41).
\item \textrm{second alphabet is:}
'\verb|0|\verb|1|\verb|2|\verb|3|\verb|4|\verb|5|\verb|6|\verb|7|\verb|8|\verb|9|'(48-57), '\verb|A|\verb|B|\verb|C|\verb|D|\verb|E|\verb|F|\verb|G|\verb|H|\verb|I|\verb|J|\verb|K|\verb|L|\verb|M|\verb|N|\verb|O|\verb|P|\verb|Q|\verb|R|\verb|S|\verb|T|\verb|U|\verb|V|\verb|W|\verb|X|\verb|Y|\verb|Z|'(65-90), '\verb|a|\verb|b|\verb|c|\verb|d|\verb|e|\verb|f|\verb|g|\verb|h|\verb|i|\verb|j|\verb|k|\verb|l|\verb|m|\verb|n|\verb|o|\verb|p|\verb|q|\verb|r|\verb|s|\verb|t|\verb|u|\verb|v|\verb|w|\verb|x|\verb|y|\verb|z|'(97-122), '\verb|_|'(95), '\verb|'|'(39).
\item \textrm{keywords, symbols and sequences recognition is case insensitive.}
\item \textrm{the keywords are:}
\Keyword{abort}, %
\Keyword{abs}, \Keyword{abstract}, \Keyword{accept}, \Keyword{access}, %
\Keyword{access function}, \Keyword{access procedure}, \Keyword{aliased}, \Keyword{all}, %
\Keyword{and}, \Keyword{array}, \Keyword{at}, \Keyword{begin}, %
\Keyword{body}, \Keyword{case}, \Keyword{constant}, \Keyword{declare}, %
\Keyword{delay}, \Keyword{delta}, \Keyword{digits}, \Keyword{do}, %
\Keyword{else}, \Keyword{elsif}, \Keyword{end}, \Keyword{entry}, %
\Keyword{exception}, \Keyword{exit}, \Keyword{for}, \Keyword{function}, %
\Keyword{generic}, \Keyword{goto}, \Keyword{if}, \Keyword{in}, %
\Keyword{is}, \Keyword{limited}, \Keyword{loop}, \Keyword{mod}, %
\Keyword{new}, \Keyword{not}, \Keyword{null}, \Keyword{of}, %
\Keyword{or}, \Keyword{others}, \Keyword{out}, \Keyword{package}, %
\Keyword{pragma}, \Keyword{private}, \Keyword{procedure}, \Keyword{protected}, %
\Keyword{raise}, \Keyword{range}, \Keyword{record}, \Keyword{rem}, %
\Keyword{renames}, \Keyword{requeue}, \Keyword{return}, \Keyword{reverse}, %
\Keyword{select}, \Keyword{separate}, \Keyword{subtype}, \Keyword{tagged}, %
\Keyword{task}, \Keyword{terminate}, \Keyword{then}, \Keyword{type}, %
\Keyword{until}, \Keyword{use}, \Keyword{when}, \Keyword{while}, %
\Keyword{with}, \Keyword{xor}.
\item \textrm{the regular symbols are:}
\item \textrm{the special symbols are:}
\verb#!=# $\to$ $\neq$, %
\verb!==! $\to$ $\equiv$, \verb!<=! $\to$ $\leq$, %
\verb!>=! $\to$ $\geq$, \verb!=>! $\to$ $\Rightarrow$.
\item \textrm{the sequences are:}
\verb!--inside$! $\to$ \comment{--}\comment{inside}\$, %
\verb!"inside"! $\to$ \texttt{"}\string{inside}\texttt{"}, %
\verb!'inside'! $\to$ \texttt{'}\string{inside}\texttt{'}, %
\verb!package body inside is! $\to$ \Keyword{package body }\Label{inside}\Keyword{ is}, %
\verb!package inside is! $\to$ \Keyword{package }\Label{inside}\Keyword{ is}, %
\verb!package inside renames! $\to$ \Keyword{package }\Label{inside}\Keyword{ renames}, %
\verb!procedure inside renames! $\to$ \Keyword{procedure }\label{inside}\Keyword{ renames}, %
\verb!procedure inside is! $\to$ \Keyword{procedure }\label{inside}\Keyword{ is}, %
\verb!procedure inside (! $\to$ \Keyword{procedure }\label{inside}\texttt{ (}, %
\verb!procedure inside(! $\to$ \Keyword{procedure }\label{inside}\texttt{(}, %
\verb!procedure inside$! $\to$ \Keyword{procedure }\label{inside}\$, %
\verb!procedure inside;! $\to$ \Keyword{procedure }\label{inside}\texttt{;}, %
\verb!function inside renames! $\to$ \Keyword{function }\label{inside}\Keyword{ renames}, %
\verb!function inside is! $\to$ \Keyword{function }\label{inside}\Keyword{ is}, %
\verb!function inside (! $\to$ \Keyword{function }\label{inside}\texttt{ (}, %
\verb!function inside(! $\to$ \Keyword{function }\label{inside}\texttt{(}, %
\verb!function inside$! $\to$ \Keyword{function }\label{inside}\$, %
\verb!function inside;! $\to$ \Keyword{function }\label{inside}\texttt{;}.
\item \textrm{the verbatims are:}
"\verb!'''!".
\item \textrm{the escapes are:}
"\verb!""!", "\verb!\\!", "\verb!\'!".
\end{itemize}


\magicbf{25} \subsection{PreScript style}
\begin{itemize}
\header{PreScript style}
\item This is prescript, a language of description of textual pages. It provides by the use of LaTeX like commands, a way to describe the pages that this program should produce. It can be a very good choice of destination language for people who want to produce text to print (e.g. pretty-printing, automating documentation etc.) but who definitely do not want to learn postscript, nor to require the use of LaTeX.
It is also known as BifTeX (Basic Instruction From LaTeX), of ptf (Poor Text Format).
Symbol translation is always enabled in this mode.
\item \textrm{the abbreviation are:} prescript, biftex, bif, pre, ptf.
\item \textrm{first alphabet is:}
'\verb|A|\verb|B|\verb|C|\verb|D|\verb|E|\verb|F|\verb|G|\verb|H|\verb|I|\verb|J|\verb|K|\verb|L|\verb|M|\verb|N|\verb|O|\verb|P|\verb|Q|\verb|R|\verb|S|\verb|T|\verb|U|\verb|V|\verb|W|\verb|X|\verb|Y|\verb|Z|'(65-90), '\verb|a|\verb|b|\verb|c|\verb|d|\verb|e|\verb|f|\verb|g|\verb|h|\verb|i|\verb|j|\verb|k|\verb|l|\verb|m|\verb|n|\verb|o|\verb|p|\verb|q|\verb|r|\verb|s|\verb|t|\verb|u|\verb|v|\verb|w|\verb|x|\verb|y|\verb|z|'(97-122), '\verb|\|'(92), '\verb|_|'(95).
\item \textrm{second alphabet is:}
'\verb|A|\verb|B|\verb|C|\verb|D|\verb|E|\verb|F|\verb|G|\verb|H|\verb|I|\verb|J|\verb|K|\verb|L|\verb|M|\verb|N|\verb|O|\verb|P|\verb|Q|\verb|R|\verb|S|\verb|T|\verb|U|\verb|V|\verb|W|\verb|X|\verb|Y|\verb|Z|'(65-90), '\verb|a|\verb|b|\verb|c|\verb|d|\verb|e|\verb|f|\verb|g|\verb|h|\verb|i|\verb|j|\verb|k|\verb|l|\verb|m|\verb|n|\verb|o|\verb|p|\verb|q|\verb|r|\verb|s|\verb|t|\verb|u|\verb|v|\verb|w|\verb|x|\verb|y|\verb|z|'(97-122), '\verb|_|'(95).
\item \textrm{keywords, symbols and sequences recognition is case sensitive.}
\item \textrm{there are no keywords.}
\item \textrm{there are no regular symbols.}
\item \textrm{the special symbols are:}
\verb!\$! $\to$ \$, %
\verb!$! $\to$ , \verb!\_! $\to$ \_, %
\verb!\%! $\to$ \%, \verb!\&! $\to$ \&, %
\verb!\#! $\to$ \#, \verb!\(! $\to$ (, %
\verb!\)! $\to$ ), \verb!\[! $\to$ [, %
\verb!\]! $\to$ ], \verb!\{! $\to$ \{, %
\verb!\|! $\to$ $\|$, \verb!\}! $\to$ \}.
\item \textrm{the sequences are:}
\verb!\\encoding{inside}! $\to$ \texttt{inside}, %
\verb!%%prescript:skipinside%%prescript:piks$! $\to$ , %
\verb!%inside$! $\to$ , %
\verb!\\item[inside]! $\to$ \label{inside}, %
\verb!\\section{inside}! $\to$ \Label{inside}, %
\verb!\\subsection{inside}! $\to$ \label{inside}, %
\verb!\\subsubsection{inside}! $\to$ \label{inside}, %
\verb!\\header{inside}$! $\to$ \texttt{inside}, %
\verb!\\footer{inside}$! $\to$ \texttt{inside}, %
\verb!\\textbf{inside}! $\to$ \Keyword{inside}, %
\verb!\\textit{inside}! $\to$ \keyword{inside}, %
\verb!\\textbi{inside}! $\to$ \Keyword{inside}, %
\verb!\\textrm{inside}! $\to$ \string{inside}, %
\verb!\\textsy{inside}! $\to$ $\iota$$\nu$$\sigma$$\iota$$\delta$$\epsilon$, %
\verb!\\texttt{inside}! $\to$ \texttt{inside}, %
\verb!\\keyword{inside}! $\to$ \keyword{inside}, %
\verb!\\Keyword{inside}! $\to$ \Keyword{inside}, %
\verb!\\comment{inside}! $\to$ \comment{inside}, %
\verb!\\Comment{inside}! $\to$ \Comment{inside}, %
\verb!\\label{inside}! $\to$ \label{inside}, %
\verb!\\Label{inside}! $\to$ \Label{inside}, %
\verb!\\string{inside}! $\to$ \string{inside}, %
\verb!\\magicbf{inside}! $\to$ \Keyword{inside}, %
\verb!\\magicit{inside}! $\to$ \keyword{inside}, %
\verb!\\magicbi{inside}! $\to$ \Keyword{inside}, %
\verb!\\magicrm{inside}! $\to$ \string{inside}, %
\verb!\\magicsy{inside}! $\to$ $\iota$$\nu$$\sigma$$\iota$$\delta$$\epsilon$, %
\verb!\\magictt{inside}! $\to$ \texttt{inside}, %
\verb!\\verb+inside+! $\to$ \texttt{inside}, %
\verb#\\verb!inside!# $\to$ \texttt{inside}, %
\verb!\\verb|inside|! $\to$ \texttt{inside}, %
\verb!\\verb#inside#! $\to$ \texttt{inside}, %
\verb!\\verb=inside=! $\to$ \texttt{inside}.
\item \textrm{there are no verbatims.}
\item \textrm{there are no escapes.}
\end{itemize}
\end{document}
